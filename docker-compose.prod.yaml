services:
  web:
    image: ${PROJECT_NAME:-gestral}:latest
    ports:
      - "8000:8000"
    volumes:
      - ./.env:/app/.env:ro
    environment:
      - DJANGO_SETTINGS_MODULE=settings
      - DEBUG=0
      - PYTHONPATH=/app
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 5G
        reservations:
          cpus: "1"
          memory: 2G
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Celery worker for background tasks
  celery:
    image: ${PROJECT_NAME:-gestral}:latest
    command: celery -A celeryapp worker --loglevel=info --concurrency=4
    volumes:
      - ./.env:/app/.env:ro
      - ./gcp-credentials.json:/app/gcp-credentials.json:ro
    environment:
      - DJANGO_SETTINGS_MODULE=settings
      - PYTHONPATH=/app
    networks:
      - app-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 3G
        reservations:
          cpus: "1"
          memory: 1G

  # Celery beat scheduler
  celery-beat:
    image: ${PROJECT_NAME:-gestral}:latest
    command: celery -A celeryapp beat --loglevel=info
    volumes:
      - ./.env:/app/.env:ro
      - ./gcp-credentials.json:/app/gcp-credentials.json:ro
      - celery_beat:/app/celerybeat
    environment:
      - DJANGO_SETTINGS_MODULE=settings
      - PYTHONPATH=/app
    networks:
      - app-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: 256M
        reservations:
          cpus: "0.1"
          memory: 128M


volumes:
  celery_beat:
  static_files:

networks:
  app-network:
    driver: bridge
