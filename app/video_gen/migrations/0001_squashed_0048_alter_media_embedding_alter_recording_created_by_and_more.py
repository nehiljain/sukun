# Generated by Django 5.2.5 on 2025-09-04 08:49

import uuid

import common.fields
import django.db.migrations.operations.special
import django.db.models.deletion
import pgvector.django.vector
from django.db import migrations, models

# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# video_gen.migrations.0021_videoproject_workspace
# video_gen.migrations.0039_rendervideo_aspect_ratio
# video_gen.migrations.0041_migrate_media_video_project


class Migration(migrations.Migration):
    replaces = [
        ("video_gen", "0001_initial"),
        ("video_gen", "0002_capture_metadata"),
        ("video_gen", "0003_brandasset"),
        ("video_gen", "0004_delete_brandasset"),
        ("video_gen", "0005_brandasset"),
        ("video_gen", "0006_videoproject_videoasset"),
        ("video_gen", "0007_videoproject_duration_videoproject_format_and_more"),
        ("video_gen", "0008_rename_video_videoasset_video_project_and_more"),
        ("video_gen", "0009_alter_videoasset_status"),
        ("video_gen", "0010_videoasset_rendered_video_url"),
        ("video_gen", "0011_videoasset_render_token"),
        ("video_gen", "0012_videoasset_audio_recordings"),
        ("video_gen", "0013_videoasset_remotion_state"),
        ("video_gen", "0014_alter_videoasset_status"),
        ("video_gen", "0015_videoasset_video_recordings"),
        ("video_gen", "0016_rename_storage_dir_capture_storage_url_path_and_more"),
        ("video_gen", "0017_rename_models_capture_and_videoasset"),
        ("video_gen", "0018_rename_current_state_videoproject_state_and_more"),
        ("video_gen", "0019_videoproject_is_public"),
        ("video_gen", "0020_alter_media_type"),
        ("video_gen", "0021_videoproject_workspace"),
        ("video_gen", "0022_rendervideo_render_speed_rendervideo_resolution"),
        ("video_gen", "0023_media_thumbnail_url"),
        ("video_gen", "0024_videoproject_is_template"),
        ("video_gen", "0025_remove_videoproject_duration_and_more"),
        ("video_gen", "0026_media_tags_rendervideo_tags_videoproject_tags"),
        ("video_gen", "0027_media_caption_metadata_and_more"),
        ("video_gen", "0028_videopipelinerun_render_video"),
        ("video_gen", "0029_videoproject_preview_url_and_more"),
        ("video_gen", "0030_rename_format_videoproject_aspect_ratio"),
        ("video_gen", "0031_rendervideo_email_attempts_rendervideo_email_sent_at"),
        ("video_gen", "0033_rendervideo_is_featured"),
        ("video_gen", "0034_alter_rendervideo_status_alter_videoproject_status"),
        ("video_gen", "0035_recording"),
        ("video_gen", "0036_alter_recording_daily_room_name"),
        ("video_gen", "0037_remove_recording_daily_room_name_and_more"),
        ("video_gen", "0038_add_render_video_fields"),
        ("video_gen", "0039_rendervideo_aspect_ratio"),
        ("video_gen", "0040_media_duration_in_seconds_media_format_and_more"),
        ("video_gen", "0041_migrate_media_video_project"),
        ("video_gen", "0042_add_embedding_field"),
        ("video_gen", "0043_add_pgvector_index"),
        ("video_gen", "0044_add_ai_summary_field"),
        ("video_gen", "0045_alter_media_resolution"),
        ("video_gen", "0046_migrate_ai_summary_to_json"),
        ("video_gen", "0047_alter_media_embedding_for_qwen8"),
        ("video_gen", "0048_alter_media_embedding_alter_recording_created_by_and_more"),
    ]

    initial = True

    dependencies = [
        ("user_org", "0002_alter_project_organization"),
        (
            "user_org",
            "0004_alter_project_options_rename_metadata_project_inputs_and_more",
        ),
        ("user_org", "0006_project_inputs_project_user"),
        ("user_org", "0007_rename_project_workspace"),
        ("user_org", "0008_anonymoussession"),
        ("user_org", "0009_anonymoussession_email"),
        ("user_org", "0010_sourcecodeprovider_appuser_alter_membership_user_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Media",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("cancelled", "Cancelled"),
                            ("error", "Error"),
                            ("complete", "Complete"),
                            ("deleted", "Deleted"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("storage_url_path", models.CharField(max_length=255)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("video", "Video"),
                            ("audio", "Audio"),
                            ("screen", "Screen"),
                            ("image", "Image"),
                        ],
                        default="video",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="media",
                        to="user_org.organization",
                    ),
                ),
                ("metadata", models.JSONField(blank=True, null=True)),
            ],
            options={
                "ordering": ["-created_at"],
                "verbose_name": "Media",
                "verbose_name_plural": "Media",
            },
        ),
        migrations.CreateModel(
            name="BrandAsset",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("colors", models.JSONField(default=list)),
                ("logo", models.JSONField(default=dict)),
                ("font", models.JSONField(default=dict)),
                ("voiceover", models.JSONField(default=dict)),
                ("cover", models.JSONField(default=dict)),
                ("intro_video", models.JSONField(default=dict)),
                ("outro_video", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="brand_assets",
                        to="user_org.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Brand Asset",
                "verbose_name_plural": "Brand Assets",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="VideoProject",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("processing", "Processing"),
                            ("complete", "Complete"),
                            ("error", "Error"),
                            ("deleted", "Deleted"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("chat_messages", models.JSONField(blank=True, null=True)),
                ("metadata", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "brand_asset",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="video_projects",
                        to="video_gen.brandasset",
                    ),
                ),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="video_projects",
                        to="user_org.organization",
                    ),
                ),
                (
                    "duration",
                    models.IntegerField(
                        choices=[
                            (5, "5 seconds"),
                            (30, "30 seconds"),
                            (60, "60 seconds"),
                            (180, "3 minutes"),
                            (300, "5 minutes"),
                        ],
                        default=30,
                    ),
                ),
                (
                    "format",
                    models.CharField(
                        choices=[
                            ("16:9", "16:9 Landscape"),
                            ("9:16", "9:16 Portrait"),
                            ("1:1", "1:1 Square"),
                        ],
                        default="16:9",
                        max_length=10,
                    ),
                ),
                (
                    "video_quality",
                    models.CharField(
                        choices=[
                            ("480p", "480p"),
                            ("720p", "720p"),
                            ("1080p", "1080p"),
                        ],
                        default="720p",
                        max_length=10,
                    ),
                ),
                ("state", models.JSONField(blank=True, null=True)),
                ("is_public", models.BooleanField(default=False)),
                (
                    "workspace",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="video_projects",
                        to="user_org.workspace",
                    ),
                ),
            ],
            options={
                "verbose_name": "Video Project",
                "verbose_name_plural": "Video Projects",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="RenderVideo",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("video_url", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "thumbnail_url",
                    models.URLField(blank=True, max_length=500, null=True),
                ),
                ("is_public", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "video_project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="render_videos",
                        to="video_gen.videoproject",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("generated", "Generated"),
                            ("accepted", "Accepted"),
                            ("changes_requested", "Changes Requested"),
                            ("error", "Error"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "render_token",
                    models.CharField(blank=True, max_length=64, null=True),
                ),
                ("state", models.JSONField(blank=True, null=True)),
            ],
            options={
                "ordering": ["-created_at"],
                "verbose_name": "Render Video",
                "verbose_name_plural": "Render Videos",
            },
        ),
        migrations.AddField(
            model_name="rendervideo",
            name="render_speed",
            field=models.CharField(
                choices=[
                    ("fast", "Fast (Lower Quality)"),
                    ("medium", "Medium (Balanced)"),
                    ("slow", "Slow (High Quality)"),
                ],
                default="medium",
                max_length=10,
            ),
        ),
        migrations.AddField(
            model_name="rendervideo",
            name="resolution",
            field=models.CharField(
                choices=[
                    ("720p", "HD (720p)"),
                    ("1080p", "Full HD (1080p)"),
                    ("2160p", "Ultra HD (4K)"),
                ],
                default="720p",
                max_length=10,
            ),
        ),
        migrations.AddField(
            model_name="media",
            name="thumbnail_url",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="videoproject",
            name="is_template",
            field=models.BooleanField(default=False),
        ),
        migrations.RemoveField(
            model_name="videoproject",
            name="duration",
        ),
        migrations.RemoveField(
            model_name="videoproject",
            name="video_quality",
        ),
        migrations.AddField(
            model_name="media",
            name="tags",
            field=models.JSONField(blank=True, default=list, null=True),
        ),
        migrations.AddField(
            model_name="rendervideo",
            name="tags",
            field=models.JSONField(blank=True, default=list, null=True),
        ),
        migrations.AddField(
            model_name="videoproject",
            name="tags",
            field=models.JSONField(blank=True, default=list, null=True),
        ),
        migrations.AddField(
            model_name="media",
            name="caption_metadata",
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="videoproject",
            name="anonymous_session",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="user_org.anonymoussession",
            ),
        ),
        migrations.AlterField(
            model_name="videoproject",
            name="workspace",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="video_projects",
                to="user_org.workspace",
            ),
        ),
        migrations.AddField(
            model_name="videoproject",
            name="preview_url",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.CreateModel(
            name="VideoPipelineRun",
            fields=[
                (
                    "id",
                    common.fields.PrefixedUUIDField(
                        "vplr", primary_key=True, serialize=False
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("created", "Created"),
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "input_payload",
                    models.JSONField(blank=True, default=dict, null=True),
                ),
                ("input_config", models.JSONField(blank=True, default=dict, null=True)),
                ("logs", models.JSONField(blank=True, default=list, null=True)),
                ("error_logs", models.TextField(blank=True, null=True)),
                (
                    "video_project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="video_pipeline_runs",
                        to="video_gen.videoproject",
                    ),
                ),
                (
                    "render_video",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pipeline_runs",
                        to="video_gen.rendervideo",
                    ),
                ),
            ],
        ),
        migrations.RenameField(
            model_name="videoproject",
            old_name="format",
            new_name="aspect_ratio",
        ),
        migrations.AddField(
            model_name="rendervideo",
            name="email_attempts",
            field=models.JSONField(blank=True, default=list, null=True),
        ),
        migrations.AddField(
            model_name="rendervideo",
            name="email_sent_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="rendervideo",
            name="is_featured",
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name="videoproject",
            name="status",
            field=models.CharField(
                choices=[
                    ("draft", "Draft"),
                    ("processing", "Processing"),
                    ("generated", "Generated"),
                    ("accepted", "Accepted"),
                    ("changes_requested", "Changes Requested"),
                    ("complete", "Complete"),
                    ("error", "Error"),
                    ("deleted", "Deleted"),
                ],
                default="draft",
                max_length=20,
            ),
        ),
        migrations.CreateModel(
            name="Room",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("daily_room_name", models.CharField(max_length=255, unique=True)),
                ("daily_room_url", models.URLField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="user_org.appuser",
                    ),
                ),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="user_org.organization",
                    ),
                ),
            ],
            options={
                "unique_together": {("created_by", "org")},
            },
        ),
        migrations.CreateModel(
            name="Recording",
            fields=[
                (
                    "id",
                    common.fields.PrefixedUUIDField(
                        "rec", primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(default="Recording Session", max_length=255)),
                (
                    "daily_room_token",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("created", "Created"),
                            ("active", "Active"),
                            ("recording", "Recording"),
                            ("completed", "Completed"),
                            ("error", "Error"),
                        ],
                        default="created",
                        max_length=20,
                    ),
                ),
                (
                    "s3_folder_path",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("recording_started_at", models.DateTimeField(blank=True, null=True)),
                ("recording_ended_at", models.DateTimeField(blank=True, null=True)),
                (
                    "daily_recording_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("daily_session_data", models.JSONField(blank=True, null=True)),
                ("tracks_downloaded", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recordings",
                        to="user_org.appuser",
                    ),
                ),
                (
                    "room",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recordings",
                        to="video_gen.room",
                    ),
                ),
            ],
            options={
                "verbose_name": "Recording",
                "verbose_name_plural": "Recordings",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="rendervideo",
            name="description",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="rendervideo",
            name="chat_messages",
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="rendervideo",
            name="status",
            field=models.CharField(
                choices=[
                    ("pending", "Pending"),
                    ("generated", "Generated"),
                    ("accepted", "Accepted"),
                    ("error", "Error"),
                ],
                default="pending",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="rendervideo",
            name="aspect_ratio",
            field=models.CharField(
                choices=[
                    ("16:9", "16:9 Landscape"),
                    ("9:16", "9:16 Portrait"),
                    ("1:1", "1:1 Square"),
                ],
                default="16:9",
                max_length=10,
            ),
        ),
        migrations.AddField(
            model_name="media",
            name="duration_in_seconds",
            field=models.IntegerField(blank=True, default=0, null=True),
        ),
        migrations.AddField(
            model_name="media",
            name="format",
            field=models.CharField(
                blank=True,
                choices=[
                    ("mp4", "MP4"),
                    ("mov", "MOV"),
                    ("webm", "WEBM"),
                    ("m4v", "M4V"),
                    ("mpeg", "MPEG"),
                    ("mpeg4", "MPEG4"),
                    ("gif", "GIF"),
                    ("webp", "WEBP"),
                    ("png", "PNG"),
                    ("jpg", "JPG"),
                    ("jpeg", "JPEG"),
                    ("tiff", "TIFF"),
                ],
                default=None,
                max_length=20,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="media",
            name="resolution",
            field=models.CharField(
                choices=[("sd", "SD"), ("hd", "HD"), ("uhd", "UHD")],
                default="hd",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="media",
            name="type",
            field=models.CharField(
                choices=[
                    ("studio_recording", "Studio Recording"),
                    ("video", "Video"),
                    ("audio", "Audio"),
                    ("screen", "Screen"),
                    ("image", "Image"),
                ],
                default="video",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="rendervideo",
            name="status",
            field=models.CharField(
                choices=[
                    ("pending", "Pending"),
                    ("generated", "Generated"),
                    ("accepted", "Accepted"),
                    ("rejected", "Rejected"),
                    ("error", "Error"),
                ],
                default="pending",
                max_length=20,
            ),
        ),
        migrations.CreateModel(
            name="VideoProjectMedia",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "order",
                    models.IntegerField(
                        default=0, help_text="Order of media in the project"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "media",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project_media",
                        to="video_gen.media",
                    ),
                ),
                (
                    "video_project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project_media",
                        to="video_gen.videoproject",
                    ),
                ),
            ],
            options={
                "verbose_name": "Video Project Media",
                "verbose_name_plural": "Video Project Media",
                "ordering": ["order", "-created_at"],
                "unique_together": {("video_project", "media")},
            },
        ),
        migrations.RunSQL(
            sql="CREATE EXTENSION IF NOT EXISTS vector;",
            reverse_sql="DROP EXTENSION IF EXISTS vector CASCADE;",
        ),
        migrations.AddField(
            model_name="media",
            name="embedding",
            field=pgvector.django.vector.VectorField(
                blank=True,
                dimensions=1536,
                help_text="Vector embedding for semantic search (text-embedding-3-small)",
                null=True,
            ),
        ),
        migrations.RunSQL(
            sql="CREATE EXTENSION IF NOT EXISTS vector;",
            reverse_sql="DROP EXTENSION IF EXISTS vector CASCADE;",
        ),
        migrations.RunSQL(
            sql="CREATE EXTENSION IF NOT EXISTS vector;",
            reverse_sql="DROP EXTENSION IF EXISTS vector CASCADE;",
        ),
        migrations.RunSQL(
            sql="CREATE INDEX IF NOT EXISTS media_embedding_hnsw_idx ON video_gen_media USING hnsw (embedding vector_cosine_ops) WITH (m = 16, ef_construction = 64);",
            reverse_sql="DROP INDEX IF EXISTS media_embedding_hnsw_idx;",
        ),
        migrations.RunSQL(
            sql="CREATE INDEX IF NOT EXISTS media_embedding_ivfflat_idx ON video_gen_media USING ivfflat (embedding vector_cosine_ops) WITH (lists = 100);",
            reverse_sql="DROP INDEX IF EXISTS media_embedding_ivfflat_idx;",
        ),
        migrations.AlterField(
            model_name="media",
            name="resolution",
            field=models.CharField(
                choices=[("720p", "Sd"), ("1080p", "Hd"), ("2160p", "Uhd")],
                default="1080p",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="media",
            name="embedding_text",
            field=models.JSONField(
                blank=True,
                help_text="AI summary data including text, model, and timestamp",
                null=True,
            ),
        ),
        migrations.RunSQL(
            sql="UPDATE video_gen_media SET embedding = NULL WHERE embedding IS NOT NULL;",
            reverse_sql="-- No reverse operation needed, data was cleared",
        ),
        migrations.AlterField(
            model_name="media",
            name="embedding",
            field=pgvector.django.vector.VectorField(
                blank=True,
                dimensions=1024,
                help_text="Vector embedding for semantic search (text-embedding-3-large)",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="recording",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="recordings",
                to="user_org.appuser",
            ),
        ),
        migrations.AlterField(
            model_name="room",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="user_org.appuser"
            ),
        ),
    ]
