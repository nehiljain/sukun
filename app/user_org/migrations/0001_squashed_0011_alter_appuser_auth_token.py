# Generated by Django 5.2.4 on 2025-08-05 19:37

import uuid

import django.db.migrations.operations.special
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# user_org.migrations.0001_initial
# user_org.migrations.0006_project_inputs_project_user


class Migration(migrations.Migration):
    replaces = [
        ("user_org", "0001_initial"),
        ("user_org", "0002_alter_project_organization"),
        ("user_org", "0003_alter_project_options_project_metadata_and_more"),
        (
            "user_org",
            "0004_alter_project_options_rename_metadata_project_inputs_and_more",
        ),
        ("user_org", "0005_remove_project_inputs_remove_project_user"),
        ("user_org", "0006_project_inputs_project_user"),
        ("user_org", "0007_rename_project_workspace"),
        ("user_org", "0008_anonymoussession"),
        ("user_org", "0009_anonymoussession_email"),
        ("user_org", "0010_sourcecodeprovider_appuser_alter_membership_user_and_more"),
        ("user_org", "0011_alter_appuser_auth_token"),
    ]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AppUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=100)),
                ("profile_url", models.URLField(blank=True)),
                ("is_email_verified", models.BooleanField(default=False)),
                ("verification_sent_at", models.DateTimeField(blank=True, null=True)),
                (
                    "verification_token",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "company_role",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("marketing", "Marketing"),
                            ("developer_relations", "Developer Relations"),
                            ("sales", "Sales"),
                            ("content_creator", "Content Creator"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "usage_reason",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("creating_videos", "Creating new videos"),
                            ("editing_videos", "Editing videos"),
                            ("screen_capture", "Screen capture"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "stripe_customer_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "stripe_price_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("has_subscription_access", models.BooleanField(default=False)),
                (
                    "subscription_renewal_date",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("auth_token", models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Membership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("read_only", "Read Only"),
                            ("member", "Member"),
                            ("owner", "Owner"),
                        ],
                        default="member",
                        max_length=50,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="user_org.appuser",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="user_org.appuser",
                    ),
                ),
                (
                    "members",
                    models.ManyToManyField(
                        related_name="organizations",
                        through="user_org.Membership",
                        to="user_org.appuser",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="membership",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="user_org.organization"
            ),
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="user_org.organization",
                    ),
                ),
            ],
        ),
        migrations.AlterField(
            model_name="project",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="projects",
                to="user_org.organization",
            ),
        ),
        migrations.AlterModelOptions(
            name="project",
            options={"ordering": ["-id"]},
        ),
        migrations.AddField(
            model_name="project",
            name="metadata",
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AlterModelOptions(
            name="project",
            options={},
        ),
        migrations.RenameField(
            model_name="project",
            old_name="metadata",
            new_name="inputs",
        ),
        migrations.RemoveField(
            model_name="project",
            name="inputs",
        ),
        migrations.AddField(
            model_name="project",
            name="inputs",
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="project",
            name="user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="projects",
                to="user_org.appuser",
            ),
        ),
        migrations.AlterField(
            model_name="project",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="projects",
                to="user_org.appuser",
            ),
        ),
        migrations.RenameModel(
            old_name="Project",
            new_name="Workspace",
        ),
        migrations.CreateModel(
            name="AnonymousSession",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("session_key", models.CharField(max_length=64, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField()),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["session_key"], name="user_org_an_session_4874b8_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="AppUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=100)),
                ("profile_url", models.URLField(blank=True)),
                ("is_email_verified", models.BooleanField(default=False)),
                ("verification_sent_at", models.DateTimeField(blank=True, null=True)),
                (
                    "verification_token",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "company_role",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("marketing", "Marketing"),
                            ("developer_relations", "Developer Relations"),
                            ("sales", "Sales"),
                            ("content_creator", "Content Creator"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "usage_reason",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("creating_videos", "Creating new videos"),
                            ("editing_videos", "Editing videos"),
                            ("screen_capture", "Screen capture"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "stripe_customer_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "stripe_price_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("has_subscription_access", models.BooleanField(default=False)),
                (
                    "subscription_renewal_date",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "active_org",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="user_org.organization",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("auth_token", models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.AlterField(
            model_name="membership",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="user_org.appuser"
            ),
        ),
        migrations.AlterField(
            model_name="organization",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="user_org.appuser"
            ),
        ),
        migrations.AlterField(
            model_name="organization",
            name="members",
            field=models.ManyToManyField(
                related_name="organizations",
                through="user_org.Membership",
                to="user_org.appuser",
            ),
        ),
        migrations.AlterField(
            model_name="workspace",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="projects",
                to="user_org.appuser",
            ),
        ),
    ]
