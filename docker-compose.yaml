services:
  web:
    build: .
    ports:
      - "8001:8000"
    volumes:
      - ./.env:/opt/django/.env
    profiles: ["web"]

  db:
    image: pgvector/pgvector:pg16
    restart: always
    command: >
      postgres
      -c shared_preload_libraries='pg_stat_statements,pg_buffercache'
      -c pg_stat_statements.track=top
      -c pg_stat_statements.max=10000
      -c log_min_duration_statement=2000
      -c log_checkpoints=on
      -c log_connections=on
      -c log_disconnections=on
      -c log_lock_waits=on
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${PROJECT_NAME}
      POSTGRES_EXTENSIONS: uuid-ossp, pg_trgm
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10
    ports:
      - 5433:5432
    volumes:
      - pgdata:/var/lib/postgresql/${PROJECT_NAME}
      - ./db_scripts/:/docker-entrypoint-initdb.d/
    profiles: ["db"]

  pgadmin:
    image: dpage/pgadmin4:9.5
    restart: always
    ports:
      - "8889:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@${PROJECT_NAME}.com
      PGADMIN_DEFAULT_PASSWORD: admin
    profiles: ["debug"]
    volumes:
      - pgadmin-data:/var/lib/pgadmin

volumes:
  pgdata:
  pgadmin-data:
